@model PaginatedList<Question>

@{
    ViewData["Title"] = "testPage";
}

<h1>testPage</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
               Title
            </th>
            <th>
               Date
            </th>
            <th>
               Content
            </th>
            <th>
               AppUser
            </th>
            <th>
               Vote
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppUser.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vote)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   
   asp-route-pageNumber="@(Model.PageIndex - 1)"
 
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   
   class="btn btn-default @nextDisabled">
    Next
</a>